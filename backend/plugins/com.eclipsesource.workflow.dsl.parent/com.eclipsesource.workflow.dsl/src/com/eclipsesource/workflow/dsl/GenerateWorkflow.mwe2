module com.eclipsesource.workflow.dsl.GenerateWorkflow

import org.eclipse.xtext.xtext.generator.*
import org.eclipse.xtext.xtext.generator.model.project.*

var rootPath = ".."
//var projectName = "com.eclipsesource.workflow.dsl"
//var runtimeProject = "../${projectName}"

Workflow {

	bean = org.eclipse.emf.mwe.utils.StandaloneSetup {
		scanClassPath = true
		platformUri = "${rootPath}"
		uriMap = {
			from = "platform:/plugin/org.eclipse.emf.codegen.ecore/model/GenModel.genmodel"
			to = "platform:/resource/org.eclipse.emf.codegen.ecore/model/GenModel.genmodel"
		}
		uriMap = {
			from = "platform:/plugin/org.eclipse.emf.ecore/model/Ecore.genmodel"
			to = "platform:/resource/org.eclipse.emf.ecore/model/Ecore.genmodel"
		}

		uriMap = {
			from = "platform:/plugin/org.eclipse.emf.codegen.ecore/model/GenModel.ecore"
			to = "platform:/resource/org.eclipse.emf.codegen.ecore/model/GenModel.ecore"
		}
		uriMap = {
			from = "platform:/plugin/org.eclipse.emf.ecore/model/Ecore.ecore"
			to = "platform:/resource/org.eclipse.emf.ecore/model/Ecore.ecore"
		}
		// 
		registerGeneratedEPackage = "org.eclipse.emf.ecore.EcorePackage"
		registerGeneratedEPackage = "org.eclipse.emf.codegen.ecore.genmodel.GenModelPackage"
		registerGenModelFile = "platform:/resource/org.eclipse.emf.ecore/model/Ecore.genmodel"
		registerGenModelFile = "platform:/resource/org.eclipse.emf.codegen.ecore/model/GenModel.genmodel"
	}

	component = XtextGenerator {
		configuration = {
			project = StandardProjectConfig {
				baseName = "com.eclipsesource.workflow.dsl"
				rootPath = rootPath
				genericIde = {
					enabled = true
				}
				createEclipseMetaData = true
				
			}
			code = {
				encoding = "UTF-8"
				lineDelimiter = "\n"
				fileHeader = "/*\n * generated by Xtext \${version}\n */"
			}
		}
		language = StandardLanguage {
			name = "com.eclipsesource.workflow.dsl.Workflow"
			fileExtensions = "wfconfig"
			serializer = {
				generateStub = false
			}
			validator = {
			// composedCheck = "org.eclipse.xtext.validation.NamesAreUniqueValidator"
			}

			formatter = formatting.Formatter2Fragment2 {
				generateStub = true
			}
		}

	}
}
